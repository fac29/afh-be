// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using afh_db;

#nullable disable

namespace afh_be.Migrations
{
    [DbContext(typeof(MovieDBContext))]
    [Migration("20240710143917_CreateCollectionAndCollectionMovieModels")]
    partial class CreateCollectionAndCollectionMovieModels
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "8.0.6");

            modelBuilder.Entity("CollectionMovie", b =>
                {
                    b.Property<int>("CollectionID")
                        .HasColumnType("INTEGER");

                    b.Property<int>("MovieID")
                        .HasColumnType("INTEGER");

                    b.HasKey("CollectionID", "MovieID");

                    b.HasIndex("MovieID");

                    b.ToTable("CollectionMovies");

                    b.HasData(
                        new
                        {
                            CollectionID = 1,
                            MovieID = 1
                        },
                        new
                        {
                            CollectionID = 1,
                            MovieID = 2
                        },
                        new
                        {
                            CollectionID = 2,
                            MovieID = 3
                        });
                });

            modelBuilder.Entity("afh_db.Models.Collection", b =>
                {
                    b.Property<int>("CollectionID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("TEXT");

                    b.Property<string>("Description")
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.Property<int>("UserID")
                        .HasColumnType("INTEGER");

                    b.HasKey("CollectionID");

                    b.HasIndex("UserID");

                    b.ToTable("Collections");

                    b.HasData(
                        new
                        {
                            CollectionID = 1,
                            CreatedAt = new DateTime(2024, 7, 10, 15, 39, 17, 153, DateTimeKind.Local).AddTicks(6630),
                            Description = "A list of the best ever movies.",
                            Name = "Best Movies",
                            UserID = 1
                        },
                        new
                        {
                            CollectionID = 2,
                            CreatedAt = new DateTime(2024, 7, 10, 15, 39, 17, 153, DateTimeKind.Local).AddTicks(6640),
                            Description = "A list of the worst ever movies.",
                            Name = "Worst Movies",
                            UserID = 1
                        });
                });

            modelBuilder.Entity("afh_db.Models.Movie", b =>
                {
                    b.Property<int>("MovieID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("TEXT");

                    b.Property<string>("Description")
                        .HasColumnType("TEXT");

                    b.Property<string>("Genre")
                        .HasColumnType("TEXT");

                    b.Property<string>("Image")
                        .HasColumnType("TEXT");

                    b.Property<string>("Length")
                        .HasColumnType("TEXT");

                    b.Property<int>("Rating")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Title")
                        .HasColumnType("TEXT");

                    b.HasKey("MovieID");

                    b.ToTable("Movies");

                    b.HasData(
                        new
                        {
                            MovieID = 1,
                            CreatedAt = new DateTime(2024, 6, 20, 15, 39, 17, 153, DateTimeKind.Local).AddTicks(6600),
                            Description = "A thief who steals corporate secrets through the use of dream-sharing technology is given the inverse task of planting an idea into the mind of a C.E.O.",
                            Genre = "Sci-Fi",
                            Image = "inception.jpg",
                            Length = "2h 28min",
                            Rating = 9,
                            Title = "Inception"
                        },
                        new
                        {
                            MovieID = 2,
                            CreatedAt = new DateTime(2024, 6, 25, 15, 39, 17, 153, DateTimeKind.Local).AddTicks(6610),
                            Description = "Two imprisoned men bond over a number of years, finding solace and eventual redemption through acts of common decency.",
                            Genre = "Drama",
                            Image = "shawshank.jpg",
                            Length = "2h 22min",
                            Rating = 10,
                            Title = "The Shawshank Redemption"
                        },
                        new
                        {
                            MovieID = 3,
                            CreatedAt = new DateTime(2024, 6, 30, 15, 39, 17, 153, DateTimeKind.Local).AddTicks(6610),
                            Description = "The lives of two mob hitmen, a boxer, a gangster and his wife, and a pair of diner bandits intertwine in four tales of violence and redemption.",
                            Genre = "Crime",
                            Image = "pulpfiction.jpg",
                            Length = "2h 34min",
                            Rating = 8,
                            Title = "Pulp Fiction"
                        });
                });

            modelBuilder.Entity("afh_db.Models.User", b =>
                {
                    b.Property<int>("UserID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("TEXT");

                    b.Property<string>("Email")
                        .HasColumnType("TEXT");

                    b.Property<string>("HashedPassword")
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.HasKey("UserID");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            UserID = 1,
                            CreatedAt = new DateTime(2024, 6, 10, 15, 39, 17, 153, DateTimeKind.Local).AddTicks(6400),
                            Email = "john@example.com",
                            HashedPassword = "hashed_password_1",
                            Name = "John Doe"
                        },
                        new
                        {
                            UserID = 2,
                            CreatedAt = new DateTime(2024, 6, 15, 15, 39, 17, 153, DateTimeKind.Local).AddTicks(6480),
                            Email = "jane@example.com",
                            HashedPassword = "hashed_password_2",
                            Name = "Jane Smith"
                        });
                });

            modelBuilder.Entity("CollectionMovie", b =>
                {
                    b.HasOne("afh_db.Models.Collection", "Collection")
                        .WithMany("CollectionMovies")
                        .HasForeignKey("CollectionID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("afh_db.Models.Movie", "Movie")
                        .WithMany("CollectionMovies")
                        .HasForeignKey("MovieID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Collection");

                    b.Navigation("Movie");
                });

            modelBuilder.Entity("afh_db.Models.Collection", b =>
                {
                    b.HasOne("afh_db.Models.User", "User")
                        .WithMany("Collections")
                        .HasForeignKey("UserID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("afh_db.Models.Collection", b =>
                {
                    b.Navigation("CollectionMovies");
                });

            modelBuilder.Entity("afh_db.Models.Movie", b =>
                {
                    b.Navigation("CollectionMovies");
                });

            modelBuilder.Entity("afh_db.Models.User", b =>
                {
                    b.Navigation("Collections");
                });
#pragma warning restore 612, 618
        }
    }
}
